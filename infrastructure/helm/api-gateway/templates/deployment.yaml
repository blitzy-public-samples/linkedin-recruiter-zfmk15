apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "api-gateway.fullname" . }}
  labels:
    {{- include "api-gateway.labels" . | nindent 4 }}
  annotations:
    # Add checksum annotation to trigger pod rollout on config changes
    checksum/config: {{ include (print $.Template.BasePath "/configmap.yaml") . | sha256sum }}
    # Prometheus scraping annotations
    prometheus.io/scrape: {{ .Values.podAnnotations."prometheus.io/scrape" | quote }}
    prometheus.io/port: {{ .Values.podAnnotations."prometheus.io/port" | quote }}
spec:
  # High availability with multiple replicas
  replicas: {{ .Values.replicaCount }}
  selector:
    matchLabels:
      {{- include "api-gateway.selectorLabels" . | nindent 6 }}
  # Zero-downtime rolling updates
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 0
  template:
    metadata:
      labels:
        {{- include "api-gateway.selectorLabels" . | nindent 8 }}
      annotations:
        # Prometheus metrics scraping configuration
        prometheus.io/scrape: {{ .Values.podAnnotations."prometheus.io/scrape" | quote }}
        prometheus.io/port: {{ .Values.podAnnotations."prometheus.io/port" | quote }}
        prometheus.io/path: /metrics
    spec:
      # Service account for AWS IAM role binding
      serviceAccountName: {{ include "api-gateway.serviceAccountName" . }}
      # Enhanced pod security context
      securityContext:
        fsGroup: 1000
        runAsNonRoot: true
        seccompProfile:
          type: RuntimeDefault
      containers:
        - name: {{ .Chart.Name }}
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          ports:
            - name: http
              containerPort: 3000
              protocol: TCP
            - name: metrics
              containerPort: 9090
              protocol: TCP
          env:
            - name: NODE_ENV
              value: {{ .Values.env.NODE_ENV | quote }}
            - name: PORT
              value: {{ .Values.env.PORT | quote }}
            - name: LOG_LEVEL
              value: {{ .Values.env.LOG_LEVEL | quote }}
            # Add pod metadata for logging and tracing
            - name: POD_NAME
              valueFrom:
                fieldRef:
                  fieldPath: metadata.name
          # Resource limits and requests
          resources:
            {{- toYaml .Values.resources | nindent 12 }}
          # Enhanced container security context
          securityContext:
            runAsUser: 1000
            runAsNonRoot: true
            readOnlyRootFilesystem: true
            allowPrivilegeEscalation: false
            capabilities:
              drop:
                - ALL
          # Health check probes
          livenessProbe:
            httpGet:
              path: /health/live
              port: http
            initialDelaySeconds: 30
            periodSeconds: 10
            timeoutSeconds: 5
            failureThreshold: 3
          readinessProbe:
            httpGet:
              path: /health/ready
              port: http
            initialDelaySeconds: 5
            periodSeconds: 10
            timeoutSeconds: 5
            failureThreshold: 3
          startupProbe:
            httpGet:
              path: /health/startup
              port: http
            initialDelaySeconds: 10
            periodSeconds: 5
            timeoutSeconds: 5
            failureThreshold: 30
          # Volume mounts for temporary files and configuration
          volumeMounts:
            - name: tmp
              mountPath: /tmp
            - name: config
              mountPath: /app/config
              readOnly: true
      # Pod volumes
      volumes:
        - name: tmp
          emptyDir: {}
        - name: config
          configMap:
            name: {{ include "api-gateway.fullname" . }}-config
      # Node selection and scheduling
      nodeSelector:
        {{- toYaml .Values.nodeSelector | nindent 8 }}
      # Pod anti-affinity for high availability
      affinity:
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
            - weight: 100
              podAffinityTerm:
                labelSelector:
                  matchExpressions:
                    - key: app.kubernetes.io/name
                      operator: In
                      values:
                        - {{ include "api-gateway.name" . }}
                topologyKey: kubernetes.io/hostname
      # Node tolerations
      tolerations:
        {{- toYaml .Values.tolerations | nindent 8 }}