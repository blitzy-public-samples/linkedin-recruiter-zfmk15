# API Gateway Secrets Template
# Version: 1.0.0
# Manages sensitive configuration values with enhanced security controls
apiVersion: v1
kind: Secret
metadata:
  name: {{ include "api-gateway.fullname" . }}-secret
  namespace: {{ .Release.Namespace }}
  labels:
    app.kubernetes.io/name: {{ include "api-gateway.name" . }}
    helm.sh/chart: {{ .Chart.Name }}-{{ .Chart.Version | replace "+" "_" }}
    app.kubernetes.io/instance: {{ .Release.Name }}
    app.kubernetes.io/managed-by: {{ .Release.Service }}
    app.kubernetes.io/component: api-gateway
    app.kubernetes.io/part-of: linkedin-profile-search
  annotations:
    # Checksum for automatic pod rotation on secret changes
    checksum/config: {{ include (print $.Template.BasePath "/configmap.yaml") . | sha256sum }}
    # Security annotations
    vault.hashicorp.com/agent-inject: "true"
    vault.hashicorp.com/role: {{ .Values.vault.role | default "api-gateway" }}
    vault.hashicorp.com/agent-pre-populate-only: "true"
    # Enable automatic pod restart when secrets change
    secret.reloader.stakater.com/reload: "true"
    # Audit annotations
    audit.kubernetes.io/max-age: "30d"
    audit.kubernetes.io/max-backups: "10"
    # Secret rotation policy
    secret.kubernetes.io/auto-rotation: "true"
    secret.kubernetes.io/rotation-period: "720h" # 30 days
    # Security classification
    security.kubernetes.io/classification: "restricted"
type: Opaque
data:
  # JWT Authentication Secrets
  JWT_SECRET: {{ required "JWT secret is required" .Values.auth.jwt.secret | b64enc | quote }}
  JWT_EXPIRATION: {{ .Values.auth.jwt.expiration | default "24h" | b64enc | quote }}
  JWT_REFRESH_SECRET: {{ required "JWT refresh secret is required" .Values.auth.jwt.refreshSecret | b64enc | quote }}
  JWT_REFRESH_EXPIRATION: {{ .Values.auth.jwt.refreshExpiration | default "7d" | b64enc | quote }}
  
  # Auth0 Integration Secrets
  AUTH0_DOMAIN: {{ required "Auth0 domain is required" .Values.auth.auth0.domain | b64enc | quote }}
  AUTH0_CLIENT_ID: {{ required "Auth0 client ID is required" .Values.auth.auth0.clientId | b64enc | quote }}
  AUTH0_CLIENT_SECRET: {{ required "Auth0 client secret is required" .Values.auth.auth0.clientSecret | b64enc | quote }}
  AUTH0_AUDIENCE: {{ required "Auth0 audience is required" .Values.auth.auth0.audience | b64enc | quote }}
  
  # Redis Authentication
  REDIS_PASSWORD: {{ required "Redis password is required" .Values.redis.auth.password | b64enc | quote }}
  {{- if .Values.redis.sentinel.enabled }}
  REDIS_SENTINEL_PASSWORD: {{ required "Redis sentinel password is required" .Values.redis.sentinel.password | b64enc | quote }}
  {{- end }}
  
  # Rate Limiting Configuration
  RATE_LIMIT_SECRET: {{ required "Rate limit secret is required" .Values.security.rateLimit.secret | b64enc | quote }}
  
  # Encryption Keys
  ENCRYPTION_KEY: {{ required "Encryption key is required" .Values.security.encryption.key | b64enc | quote }}
  
  # API Security
  API_KEY_SECRET: {{ required "API key secret is required" .Values.security.api.keySecret | b64enc | quote }}
  
  # Environment-specific secrets
  {{- if eq .Values.env.NODE_ENV "production" }}
  PRODUCTION_SPECIFIC_SECRET: {{ .Values.security.production.specificSecret | b64enc | quote }}
  {{- end }}

  # Monitoring and Tracing
  DATADOG_API_KEY: {{ .Values.monitoring.datadog.apiKey | b64enc | quote }}
  
  # Additional Security Controls
  SECURITY_SALT: {{ randAlphaNum 32 | b64enc | quote }}
  SESSION_SECRET: {{ randAlphaNum 64 | b64enc | quote }}