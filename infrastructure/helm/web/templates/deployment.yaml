apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "web.fullname" . }}
  labels:
    {{- include "web.labels" . | nindent 4 }}
  annotations:
    # Prometheus monitoring annotations
    prometheus.io/scrape: "true"
    prometheus.io/port: "80"
    prometheus.io/path: "/metrics"
    # Deployment annotations
    kubernetes.io/change-cause: "Release {{ .Release.Name }} - {{ .Chart.Version }}"
spec:
  # Replicas managed by HorizontalPodAutoscaler when enabled
  {{- if not .Values.autoscaling.enabled }}
  replicas: {{ .Values.replicaCount }}
  {{- end }}
  # Rolling update strategy for zero-downtime deployments
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxSurge: 25%
      maxUnavailable: 25%
  selector:
    matchLabels:
      {{- include "web.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      labels:
        {{- include "web.selectorLabels" . | nindent 8 }}
      annotations:
        # Config checksum to trigger pod restart on config changes
        checksum/config: {{ include (print $.Template.BasePath "/configmap.yaml") . | sha256sum }}
        {{- with .Values.podAnnotations }}
        {{- toYaml . | nindent 8 }}
        {{- end }}
    spec:
      # Security context for the pod
      securityContext:
        {{- toYaml .Values.podSecurityContext | nindent 8 }}
      
      # Topology spread for multi-AZ deployment
      topologySpreadConstraints:
      - maxSkew: 1
        topologyKey: topology.kubernetes.io/zone
        whenUnsatisfiable: ScheduleAnyway
        labelSelector:
          matchLabels:
            {{- include "web.selectorLabels" . | nindent 12 }}
      
      # Pod anti-affinity for high availability
      affinity:
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
          - weight: 100
            podAffinityTerm:
              labelSelector:
                matchLabels:
                  {{- include "web.selectorLabels" . | nindent 16 }}
              topologyKey: kubernetes.io/hostname
        {{- with .Values.affinity }}
        {{- toYaml . | nindent 8 }}
        {{- end }}
      
      # Container specification
      containers:
      - name: {{ .Chart.Name }}
        securityContext:
          {{- toYaml .Values.containerSecurityContext | nindent 12 }}
        image: "{{ .Values.image.repository }}:{{ .Values.image.tag | default .Chart.AppVersion }}"
        imagePullPolicy: {{ .Values.image.pullPolicy }}
        
        # Container ports
        ports:
        - name: http
          containerPort: 80
          protocol: TCP
        
        # Resource requests and limits
        resources:
          {{- toYaml .Values.resources | nindent 12 }}
        
        # Liveness probe for container health
        livenessProbe:
          httpGet:
            path: /health/liveness
            port: http
          initialDelaySeconds: 30
          periodSeconds: 30
          timeoutSeconds: 3
          failureThreshold: 3
          successThreshold: 1
        
        # Readiness probe for traffic serving
        readinessProbe:
          httpGet:
            path: /health/readiness
            port: http
          initialDelaySeconds: 15
          periodSeconds: 10
          timeoutSeconds: 3
          failureThreshold: 3
          successThreshold: 1
        
        # Startup probe for initialization
        startupProbe:
          httpGet:
            path: /health/startup
            port: http
          initialDelaySeconds: 5
          periodSeconds: 5
          timeoutSeconds: 3
          failureThreshold: 30
          successThreshold: 1
        
        # Environment variables
        env:
        - name: NODE_ENV
          value: "production"
        - name: TZ
          value: "UTC"
        
        # Volume mounts for temporary data
        volumeMounts:
        - name: tmp
          mountPath: /tmp
          readOnly: false
      
      # Volumes definition
      volumes:
      - name: tmp
        emptyDir: {}
      
      # Node selection and tolerations
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      
      # Service account for pod
      serviceAccountName: {{ include "web.serviceAccountName" . }}
      
      # Termination grace period
      terminationGracePeriodSeconds: 60
      
      # Image pull secrets if needed
      {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}