apiVersion: v1
kind: Secret
metadata:
  name: {{ include "postgresql.fullname" . }}
  labels:
    {{- include "common.labels" . | nindent 4 }}
    app.kubernetes.io/component: database
    app.kubernetes.io/role: primary
  annotations:
    # Helm hooks for secret management
    helm.sh/hook: "pre-install,pre-upgrade"
    helm.sh/hook-weight: "-5"
    helm.sh/hook-delete-policy: "before-hook-creation"
    
    # Security annotations
    security.kubernetes.io/secret-type: "kubernetes.io/basic-auth"
    vault.security.banzaicloud.io/vault-role: "postgresql"
    vault.security.banzaicloud.io/vault-skip-verify: "true"
    
    # Backup annotations
    backup.velero.io/backup-volumes: "data"
    
    # Configuration checksum for updates
    checksum/config: {{ include (print $.Template.BasePath "/values.yaml") . | sha256sum }}
    
    # Encryption annotations
    encryption.kubernetes.io/encryption-provider: "aescbc"
    encryption.kubernetes.io/key-version: "1"

type: Opaque
data:
  {{- if .Values.auth.existingSecret }}
  # Use existing secret if specified
  {{- with (lookup "v1" "Secret" .Release.Namespace .Values.auth.existingSecret) }}
  postgresql-password: {{ index .data "postgresql-password" | quote }}
  postgresql-replication-password: {{ index .data "postgresql-replication-password" | quote }}
  {{- end }}
  {{- else }}
  # Generate secure random passwords if not provided
  postgresql-password: {{ .Values.auth.postgresPassword | default (randAlphaNum 32) | b64enc | quote }}
  postgresql-replication-password: {{ .Values.auth.replicationPassword | default (randAlphaNum 32) | b64enc | quote }}
  {{- end }}
  
  # Additional credentials for various components
  {{- if .Values.metrics.enabled }}
  postgresql-metrics-password: {{ .Values.auth.metricsPassword | default (randAlphaNum 32) | b64enc | quote }}
  {{- end }}
  
  {{- if .Values.auth.enableLDAP }}
  postgresql-ldap-password: {{ .Values.auth.ldapPassword | default (randAlphaNum 32) | b64enc | quote }}
  {{- end }}
  
  {{- if eq (.Values.primary.extraEnvVars | toString | contains "POSTGRESQL_AUDIT_LOGGING") true }}
  postgresql-audit-password: {{ .Values.auth.auditPassword | default (randAlphaNum 32) | b64enc | quote }}
  {{- end }}

  # Connection string template for applications
  postgresql-connection-string: {{ printf "postgresql://${POSTGRES_USER}:${POSTGRES_PASSWORD}@%s:5432/${POSTGRES_DB}?sslmode=verify-full" (include "postgresql.fullname" .) | b64enc | quote }}

  # TLS-related secrets if TLS is enabled
  {{- if .Values.auth.enableTLS }}
  postgresql-tls-key: {{ .Values.auth.tlsKey | b64enc | quote }}
  postgresql-tls-cert: {{ .Values.auth.tlsCert | b64enc | quote }}
  postgresql-tls-ca: {{ .Values.auth.tlsCA | b64enc | quote }}
  {{- end }}