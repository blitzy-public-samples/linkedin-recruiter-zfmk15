# MongoDB Helm Chart Values
# Version: 6.0
# Enhanced configuration for production deployment with HA, security and monitoring

# Image configuration
image:
  repository: mongo
  tag: "6.0"
  pullPolicy: IfNotPresent

# Naming configuration
nameOverride: ""
fullnameOverride: ""

# Replica configuration
replicaCount: 3
podManagementPolicy: OrderedReady

# Service configuration
service:
  type: ClusterIP
  port: 27017
  annotations:
    service.beta.kubernetes.io/aws-load-balancer-internal: "true"
    service.beta.kubernetes.io/aws-load-balancer-type: "nlb"

# Persistence configuration
persistence:
  enabled: true
  storageClass: "gp3"
  size: "50Gi"
  accessModes:
    - ReadWriteOnce
  annotations:
    backup.velero.io/backup-volumes: "data"

# Resource limits and requests
resources:
  limits:
    cpu: "2000m"
    memory: "4Gi"
  requests:
    cpu: "1000m"
    memory: "2Gi"

# Security context configuration
podSecurityContext:
  fsGroup: 999
  runAsUser: 999
  runAsNonRoot: true
  seccompProfile:
    type: RuntimeDefault

containerSecurityContext:
  allowPrivilegeEscalation: false
  capabilities:
    drop:
      - ALL
  readOnlyRootFilesystem: true

# Health check probes
livenessProbe:
  exec:
    command:
      - mongo
      - --eval
      - "db.adminCommand('ping')"
  initialDelaySeconds: 30
  periodSeconds: 10
  timeoutSeconds: 5
  successThreshold: 1
  failureThreshold: 3

readinessProbe:
  exec:
    command:
      - mongo
      - --eval
      - "db.adminCommand('ping')"
  initialDelaySeconds: 5
  periodSeconds: 10
  timeoutSeconds: 5
  successThreshold: 1
  failureThreshold: 3

# Pod scheduling configuration
affinity:
  podAntiAffinity:
    requiredDuringSchedulingIgnoredDuringExecution:
      - labelSelector:
          matchExpressions:
            - key: app.kubernetes.io/name
              operator: In
              values:
                - mongodb
        topologyKey: topology.kubernetes.io/zone

nodeSelector:
  node.kubernetes.io/purpose: data

tolerations:
  - key: data
    operator: Equal
    value: "true"
    effect: NoSchedule

# Network policy configuration
networkPolicy:
  enabled: true
  ingressRules:
    - from:
        - analysis-service
        - search-service
        - data-service
      ports:
        - 27017
      namespaces:
        - linkedin-search
  egressRules:
    - to:
        - metrics-server
        - monitoring
      ports:
        - 9216

# Authentication configuration
auth:
  enabled: true
  rootPassword: ""  # Should be provided via external secret
  existingSecret: mongodb-auth
  key: mongodb-key
  replicaSetKey: mongodb-replica-key

# TLS configuration
tls:
  enabled: true
  certificateSecret: mongodb-tls
  caKeySecret: mongodb-ca
  mode: requireTLS

# Metrics and monitoring configuration
metrics:
  enabled: true
  image:
    repository: bitnami/mongodb-exporter
    tag: "0.33.0"
    pullPolicy: IfNotPresent
  resources:
    limits:
      cpu: "200m"
      memory: "256Mi"
    requests:
      cpu: "100m"
      memory: "128Mi"
  serviceMonitor:
    enabled: true
    interval: "30s"
    scrapeTimeout: "10s"
    namespace: monitoring

# Backup configuration
backup:
  enabled: true
  schedule: "0 2 * * *"  # Daily backup at 2 AM
  destination: "s3://linkedin-search-backups/mongodb"
  retention: "720h"  # 30 days retention
  encryption:
    enabled: true
    kmsKeyId: "arn:aws:kms:region:account:key/backup-key"
  monitoring:
    enabled: true
    alertRules:
      backupFailure: true
      backupDelay: true