---
# Analysis Service Deployment
apiVersion: apps/v1
kind: Deployment
metadata:
  name: analysis-service
  namespace: default
  labels:
    app: analysis-service
    component: backend
    tier: analysis
  annotations:
    kubernetes.io/change-cause: "Initial deployment of analysis service"
spec:
  replicas: 2  # Initial replica count as per requirements
  selector:
    matchLabels:
      app: analysis-service
  template:
    metadata:
      labels:
        app: analysis-service
      annotations:
        prometheus.io/scrape: "true"
        prometheus.io/path: "/metrics"
        prometheus.io/port: "8000"
        prometheus.io/scheme: "http"
    spec:
      containers:
      - name: analysis-service
        image: analysis-service:latest
        imagePullPolicy: Always
        ports:
        - name: http
          containerPort: 8000
          protocol: TCP
        resources:
          limits:
            cpu: "4"
            memory: "8Gi"
          requests:
            cpu: "2"
            memory: "4Gi"
        env:
        - name: CLAUDE_BASE_URL
          value: "https://api.anthropic.com"
        - name: CLAUDE_MODEL
          value: "claude-2"
        - name: CLAUDE_RATE_LIMIT
          value: "500"
        - name: LOG_LEVEL
          value: "INFO"
        - name: WORKERS
          value: "4"
        - name: PYTHONPATH
          value: "/app/src"
        envFrom:
        - secretRef:
            name: claude-credentials
        livenessProbe:
          httpGet:
            path: /health
            port: 8000
          initialDelaySeconds: 30
          periodSeconds: 30
          timeoutSeconds: 10
          failureThreshold: 3
        readinessProbe:
          httpGet:
            path: /health
            port: 8000
          initialDelaySeconds: 15
          periodSeconds: 10
        startupProbe:
          httpGet:
            path: /health
            port: 8000
          failureThreshold: 30
          periodSeconds: 10
      securityContext:
        runAsUser: 1000
        runAsGroup: 1000
        fsGroup: 1000
        runAsNonRoot: true
        seccompProfile:
          type: RuntimeDefault
      terminationGracePeriodSeconds: 60

---
# Analysis Service ClusterIP Service
apiVersion: v1
kind: Service
metadata:
  name: analysis-service
  namespace: default
  labels:
    app: analysis-service
    component: backend
spec:
  type: ClusterIP
  ports:
  - name: http
    port: 8000
    targetPort: 8000
    protocol: TCP
  selector:
    app: analysis-service

---
# Horizontal Pod Autoscaler
apiVersion: autoscaling/v2
kind: HorizontalPodAutoscaler
metadata:
  name: analysis-service
  namespace: default
spec:
  scaleTargetRef:
    apiVersion: apps/v1
    kind: Deployment
    name: analysis-service
  minReplicas: 2
  maxReplicas: 10
  metrics:
  - type: Resource
    resource:
      name: cpu
      target:
        type: Utilization
        averageUtilization: 70
  - type: Resource
    resource:
      name: memory
      target:
        type: Utilization
        averageUtilization: 80
  behavior:
    scaleDown:
      stabilizationWindowSeconds: 300  # 5 minutes cool-down
    scaleUp:
      stabilizationWindowSeconds: 60   # 1 minute warm-up