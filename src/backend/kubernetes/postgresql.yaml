---
# PostgreSQL StatefulSet for deploying a highly available database cluster
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: linkedin-search-postgresql
  namespace: default
  labels:
    app: postgresql
    component: database
    part-of: linkedin-search
    managed-by: kubernetes
spec:
  replicas: 3  # Running 3 replicas for high availability
  serviceName: linkedin-search-postgresql
  selector:
    matchLabels:
      app: postgresql
  template:
    metadata:
      labels:
        app: postgresql
        component: database
      annotations:
        prometheus.io/scrape: "true"
        prometheus.io/port: "9187"
    spec:
      containers:
      - name: postgresql
        # bitnami/postgresql:15.4.0 - Production hardened PostgreSQL image
        image: bitnami/postgresql:15.4.0
        ports:
        - containerPort: 5432
          protocol: TCP
          name: postgresql
        - containerPort: 9187
          protocol: TCP
          name: metrics
        resources:
          requests:
            memory: "4Gi"
            cpu: "2"
          limits:
            memory: "8Gi"
            cpu: "4"
        envFrom:
        - configMapRef:
            name: linkedin-search-postgresql-config
        volumeMounts:
        - name: data
          mountPath: /bitnami/postgresql
        - name: postgresql-certs
          mountPath: /certs
          readOnly: true
        livenessProbe:
          exec:
            command:
            - pg_isready
            - -U
            - postgres
          initialDelaySeconds: 30
          periodSeconds: 10
          timeoutSeconds: 5
          successThreshold: 1
          failureThreshold: 3
        readinessProbe:
          exec:
            command:
            - pg_isready
            - -U
            - postgres
          initialDelaySeconds: 5
          periodSeconds: 10
          timeoutSeconds: 5
          successThreshold: 1
          failureThreshold: 3
      securityContext:
        fsGroup: 1001
        runAsUser: 1001
        runAsNonRoot: true
      affinity:
        podAntiAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
          - topologyKey: kubernetes.io/hostname
            labelSelector:
              matchLabels:
                app: postgresql
      volumes:
      - name: postgresql-certs
        secret:
          secretName: postgresql-certs
  volumeClaimTemplates:
  - metadata:
      name: data
    spec:
      accessModes: ["ReadWriteOnce"]
      storageClassName: gp3
      resources:
        requests:
          storage: 100Gi

---
# Service for exposing PostgreSQL within the cluster
apiVersion: v1
kind: Service
metadata:
  name: linkedin-search-postgresql
  namespace: default
  labels:
    app: postgresql
    component: database
spec:
  ports:
  - port: 5432
    targetPort: 5432
    protocol: TCP
    name: postgresql
  - port: 9187
    targetPort: 9187
    protocol: TCP
    name: metrics
  selector:
    app: postgresql
  type: ClusterIP

---
# ConfigMap containing PostgreSQL configuration
apiVersion: v1
kind: ConfigMap
metadata:
  name: linkedin-search-postgresql-config
  namespace: default
data:
  POSTGRESQL_REPLICATION_MODE: "master"
  POSTGRESQL_REPLICATION_USER: "repl_user"
  POSTGRESQL_DATABASE: "linkedin_search"
  POSTGRESQL_USERNAME: "${DB_USER}"
  POSTGRESQL_PASSWORD: "${DB_PASSWORD}"
  POSTGRESQL_POSTGRES_PASSWORD: "${DB_PASSWORD}"
  POSTGRESQL_REPLICATION_PASSWORD: "${REPL_PASSWORD}"
  POSTGRESQL_ENABLE_TLS: "yes"
  POSTGRESQL_TLS_CERT_FILE: "/certs/tls.crt"
  POSTGRESQL_TLS_KEY_FILE: "/certs/tls.key"
  POSTGRESQL_TLS_CA_FILE: "/certs/ca.crt"
  POSTGRESQL_LOG_HOSTNAME: "true"
  POSTGRESQL_LOG_CONNECTIONS: "true"
  POSTGRESQL_LOG_DISCONNECTIONS: "true"
  POSTGRESQL_PGAUDIT_LOG_CATALOG: "on"

---
# ServiceMonitor for Prometheus monitoring
apiVersion: monitoring.coreos.com/v1
kind: ServiceMonitor
metadata:
  name: linkedin-search-postgresql-monitor
  namespace: default
  labels:
    app: postgresql
    release: prometheus
spec:
  selector:
    matchLabels:
      app: postgresql
  endpoints:
  - port: metrics
    interval: 30s
    scrapeTimeout: 10s
    path: /metrics