---
# StatefulSet for MongoDB deployment
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: mongodb
  namespace: default
  labels:
    app: mongodb
    component: database
    tier: data
spec:
  replicas: 3  # High availability with 3 replicas
  serviceName: mongodb
  podManagementPolicy: OrderedReady
  selector:
    matchLabels:
      app: mongodb
  updateStrategy:
    type: RollingUpdate
    rollingUpdate:
      partition: 0
  template:
    metadata:
      labels:
        app: mongodb
        component: database
      annotations:
        prometheus.io/scrape: "true"
        prometheus.io/port: "27017"
    spec:
      # Pod anti-affinity to ensure high availability across nodes
      affinity:
        podAntiAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            - topologyKey: kubernetes.io/hostname
              labelSelector:
                matchLabels:
                  app: mongodb
      # Security context for running as non-root
      securityContext:
        runAsUser: 999
        runAsGroup: 999
        fsGroup: 999
      containers:
        - name: mongodb
          image: mongo:6.0  # Production MongoDB 6.0 version
          ports:
            - containerPort: 27017
              name: mongodb
          # Resource limits and requests
          resources:
            limits:
              cpu: "2"
              memory: 4Gi
            requests:
              cpu: "1"
              memory: 2Gi
          volumeMounts:
            - name: data
              mountPath: /data/db
            - name: config
              mountPath: /config
            - name: mongodb-keyfile
              mountPath: /etc/mongodb
              readOnly: true
          env:
            - name: MONGO_INITDB_ROOT_USERNAME
              valueFrom:
                secretKeyRef:
                  name: mongodb-credentials
                  key: username
            - name: MONGO_INITDB_ROOT_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: mongodb-credentials
                  key: password
            # Enable authentication and encryption
            - name: MONGODB_ENABLE_ENCRYPTION
              value: "true"
            - name: MONGODB_KEYFILE
              value: "/etc/mongodb/keyfile"
          # Health checks
          livenessProbe:
            exec:
              command:
                - mongo
                - --eval
                - "db.adminCommand('ping')"
            initialDelaySeconds: 30
            periodSeconds: 10
            timeoutSeconds: 5
            failureThreshold: 3
          readinessProbe:
            exec:
              command:
                - mongo
                - --eval
                - "db.adminCommand('ping')"
            initialDelaySeconds: 15
            periodSeconds: 5
      volumes:
        - name: mongodb-keyfile
          secret:
            secretName: mongodb-keyfile
            defaultMode: 0400

  # Persistent volume claims for data storage
  volumeClaimTemplates:
    - metadata:
        name: data
      spec:
        accessModes: ["ReadWriteOnce"]
        storageClassName: standard
        resources:
          requests:
            storage: 100Gi

---
# Headless Service for StatefulSet DNS
apiVersion: v1
kind: Service
metadata:
  name: mongodb
  namespace: default
  labels:
    app: mongodb
    component: database
spec:
  type: ClusterIP
  clusterIP: None  # Headless service for StatefulSet
  ports:
    - port: 27017
      targetPort: mongodb
      protocol: TCP
      name: mongodb
  selector:
    app: mongodb

---
# Network Policy for securing MongoDB access
apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
  name: mongodb-network-policy
  namespace: default
spec:
  podSelector:
    matchLabels:
      app: mongodb
  policyTypes:
    - Ingress
  ingress:
    - from:
        - podSelector:
            matchLabels:
              app: analysis-service
        - podSelector:
            matchLabels:
              app: search-service
      ports:
        - port: 27017
          protocol: TCP

---
# ConfigMap for MongoDB configuration
apiVersion: v1
kind: ConfigMap
metadata:
  name: mongodb-config
  namespace: default
data:
  mongod.conf: |
    storage:
      dbPath: /data/db
      journal:
        enabled: true
    systemLog:
      destination: file
      path: /var/log/mongodb/mongod.log
      logAppend: true
    net:
      bindIp: 0.0.0.0
      port: 27017
    security:
      authorization: enabled
      keyFile: /etc/mongodb/keyfile
    replication:
      replSetName: rs0
    monitoring:
      prometheus:
        enabled: true